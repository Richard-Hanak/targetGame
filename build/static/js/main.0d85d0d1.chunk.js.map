{"version":3,"sources":["App.js","index.js"],"names":["compare","a","b","comparison","score","React","memo","useState","highScore","setHighScore","name","setName","menu","setMenu","lifeLost","setLifeLost","y","setY","x","setX","target","setTarget","targetRef","useRef","current","setScore","scoreRef","timer","lives","setLives","livesRef","useEffect","fetch","response","json","body","status","Error","message","callBackendAPI","className","onClick","gameLoop","Math","floor","random","setTimeout","console","log","clearTimeout","map","i","key","style","top","left","onSubmit","e","preventDefault","push","sort","splice","method","headers","JSON","stringify","rawResponse","content","placeholder","maxLength","minLength","onChange","value","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d85d0d1.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction compare(a, b) {\r\n  let comparison = 0;\r\n  if (a.score < b.score) {\r\n    comparison = 1;\r\n  } else if (a.score > b.score) {\r\n    comparison = -1;\r\n  }\r\n  return comparison;\r\n}\r\n\r\nfunction App() {\r\n  const [highScore, setHighScore] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [menu, setMenu] = useState(true);\r\n  const [lifeLost, setLifeLost] = useState(false);\r\n  const [y, setY] = useState(\"\");\r\n  const [x, setX] = useState(\"\");\r\n\r\n  const [target, setTarget] = useState(false);\r\n  const targetRef = useRef(target);\r\n  targetRef.current = target;\r\n\r\n  const [score, setScore] = useState(0);\r\n  const scoreRef = useRef(score);\r\n  scoreRef.current = score;\r\n\r\n  const [lives, setLives] = useState(3);\r\n  const livesRef = useRef(lives);\r\n  livesRef.current = lives;\r\n\r\n  useEffect(() => {\r\n    const callBackendAPI = async () => {\r\n      const response = await fetch(\"/express_backend\");\r\n      const body = await response.json();\r\n      setHighScore(body);\r\n      if (response.status !== 200) {\r\n        throw Error(body.message);\r\n      }\r\n      return body;\r\n    };\r\n    callBackendAPI();\r\n  }, []);\r\n\r\n  let timer;\r\n  const gameLoop = () => {\r\n    const checkLives = () =>\r\n      targetRef.current === true\r\n        ? (setLives(livesRef.current - 1), setLifeLost(true))\r\n        : null;\r\n    checkLives();\r\n    setY(Math.floor(Math.random() * 420));\r\n    setX(Math.floor(Math.random() * 860));\r\n    setTimeout(() => setLifeLost(false), 200);\r\n    setTarget(true);\r\n    console.log(scoreRef.current)\r\n    if (scoreRef.current < 5 && livesRef.current > 0) {\r\n      timer = setTimeout(gameLoop, 3000);\r\n    } else if (scoreRef.current < 10 && livesRef.current > 0) {\r\n      timer = setTimeout(gameLoop, 2000);\r\n    } else if (scoreRef.current < 15 && livesRef.current > 0) {\r\n      timer = setTimeout(gameLoop, 1000);\r\n    } else if (scoreRef.current < 20 && livesRef.current > 0) {\r\n      timer = setTimeout(gameLoop, 800);\r\n    } else if (scoreRef.current < 30 && livesRef.current > 0) {\r\n      timer = setTimeout(gameLoop, 700);\r\n    } else if (livesRef.current > 0) {\r\n      timer = setTimeout(gameLoop, 600);\r\n    }\r\n    if (livesRef.current <= 0) {\r\n      timer = setTimeout(gameLoop, 3000);\r\n      setLifeLost(false);\r\n      setTarget(false);\r\n      clearTimeout(timer);\r\n    }\r\n  };\r\n\r\n  const handleEndGame = () => {\r\n    setMenu(true);\r\n    setScore(0);\r\n    setLives(3);\r\n  };\r\n\r\n  const handleClickShot = () => {\r\n    setScore(score + 1);\r\n    setTarget(false);\r\n  };\r\n\r\n  const handleClickStart = () => {\r\n    setMenu(false);\r\n    gameLoop();\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    highScore.push({ name: name, score: score });\r\n    highScore.sort(compare);\r\n    highScore.splice(5);\r\n    setMenu(true);\r\n    setLives(3);\r\n    setScore(0);\r\n    (async () => {\r\n      const rawResponse = await fetch(\"express_backend\", {\r\n        method: \"POST\",\r\n        headers: {\r\n\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(highScore)\r\n      });\r\n      const content = await rawResponse.json();\r\n      console.log(content);\r\n    })();\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameScreen\">\r\n      {menu ? (\r\n        <>\r\n          <ul className=\"nav\">\r\n            <li className=\"start\" onClick={handleClickStart}>\r\n              START\r\n            </li>\r\n            <li className=\"start\">GUIDE</li>\r\n            <p className=\"tip\">\r\n              Shoot as many targets as possible.<br></br>\r\n              Not shooting the target before another one appears = life lost.<br></br>\r\n              The speed will increase when your score reaches 5/10/15/20/30.\r\n              <br></br>\r\n              <b>Good Luck!</b>\r\n            </p>\r\n            <li className=\"start\">HIGHSCORE</li>\r\n            <ul className=\"highScore\">\r\n              {highScore.map((highScore, i) => (\r\n                <li key={i}>\r\n                  <span className=\"Hscore-left\">{highScore.name}</span>\r\n                  <span className=\"Hscore-mid\">:</span>\r\n                  <span className=\"Hscore-right\"> {highScore.score}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {lifeLost ? <div className=\"lifeLost\"></div> : null}\r\n          <div>\r\n            {target ? (\r\n              <div\r\n                className=\"target\"\r\n                style={{ top: y + 40, left: x }}\r\n                onClick={handleClickShot}\r\n              ></div>\r\n            ) : null}\r\n            <p className=\"score\">SCORE:{score}</p>\r\n            <p className=\"lives\">LIVES:{lives}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n      {lives <= 0 ? (\r\n        <div>\r\n          {score > highScore[4].score ? (\r\n            <>\r\n              <p className=\"lose\">NEW HIGH SCORE!</p>\r\n              <form onSubmit={handleSubmit}>\r\n                <input\r\n                  placeholder=\"ENTER YOUR NAME\"\r\n                  maxLength=\"8\"\r\n                  minLength=\"3\"\r\n                  onChange={e => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                ></input>\r\n                <button type=\"submit\">SUBMIT</button>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p className=\"lose\">YOU LOSE!</p>\r\n              <p className=\"menu\" onClick={handleEndGame}>\r\n                MENU\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}